@page "/login"
@using Blazored.LocalStorage
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject ILocalStorageService _localStorage


<h3 class="text-center text-primary mb-4">Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" class="form p-4 mx-auto" style="max-width: 400px;">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" />

    <div class="form-group mb-3">
        <label for="username" class="form-label">Username</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-person"></i>
            </span>
            <InputText id="username" @bind-Value="loginModel.Username" class="form-control" placeholder="Digite seu username" />
        </div>
    </div>

    <div class="form-group mb-3">
        <label for="password" class="form-label">Password</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-lock"></i>
            </span>
            <InputText id="password" @bind-Value="loginModel.Password" class="form-control" placeholder="Digite sua senha" type="password" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary w-100">Login</button>
</EditForm>



@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
         var token = await AuthService.LoginAsync(loginModel);
    
     // Armazenar o token em localStorage
     await _localStorage.SetItemAsync("authToken", token);

    // Navegar para a p√°gina de tarefas
    Navigation.NavigateTo("/tasks");
    }
}
